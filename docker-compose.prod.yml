version: '3.8'

services:
  web-app:
    build:
      context: ./service
      dockerfile: Dockerfile.prod
    command: gunicorn service.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web-app/staticfiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - database

  database:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  worker:
    build:
      context: ./service
    hostname: worker
    env_file:
      - ./.env.prod
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
      - database

  flower:
    build:
      context: ./service
    hostname: flower
    env_file:
      - ./.env.prod
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web-app/staticfiles
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web-app

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


volumes:
  postgres_data:
  static_volume:
